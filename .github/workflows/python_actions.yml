# Copyright (c) 2020 The University of Manchester
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This workflow will install Python dependencies, run tests, lint and rat with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python Actions
on: [push]
jobs:
  build:
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 10
    strategy:
      matrix:
        include:
          - runner: ubuntu-24.04
            python-version: "3.12"
            checks: 'tests'

          - runner: ubuntu-22.04
            python-version: "3.12"
            checks: 'full'
            coverage: 'coverage'

          - runner: ubuntu-20.04
            python-version: 3.8
            checks: 'full'

          - runner: ubuntu-latest
            python-version: "3.11"
            checks: 'tests'

          - runner: ubuntu-latest
            python-version: "3.10"
            checks: 'tests'

          - runner: ubuntu-latest
            python-version: 3.9
            checks: 'tests'

          - runner: windows-2022
            python-version: "3.12"
            checks: 'tests'

          - runner: windows-2019
            python-version: 3.8
            checks: 'tests'

          - runner: macos-14
            python-version: "3.12"
            checks: 'tests'

          - runner: macos-11
            python-version: 3.8
            checks: 'tests'

          - runner: ubuntu-22.04
            python-version: "3.12"
            checks: 'validate'

    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkout SupportScripts
      uses: actions/checkout@v4
      with:
        repository: SpiNNakerManchester/SupportScripts
        path: support

    - name: Install pip, etc
      if: ${{ matrix.checks == 'full' || matrix.checks == 'validate' }}
      uses: ./support/actions/python-tools

    - name: Install mypy
      if: ${{ matrix.checks == 'full' }}
      run: pip install mypy

    - name: Install Spinnaker Dependencies
      uses: ./support/actions/install-spinn-deps
      with:
        repositories: SpiNNUtils SpiNNMachine
        install: true

    - name: Run Install
      uses: ./support/actions/run-install

    - name: Test with pytest (and coverage)
      if: ${{ matrix.checks == 'full' }}
      uses: ./support/actions/pytest
      env:
        SPALLOC_USER: ${{ secrets.SPALLOC_USER }}
        SPALLOC_PASSWORD: ${{ secrets.SPALLOC_PASSWORD }}
      with:
        tests: unittests
        coverage: ${{ matrix.coverage == 'coverage' }}
        cover-packages: spinnman, spinnman_integration_tests
        coveralls-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Simple pytest
      if: ${{matrix.check == 'tests'}}
      env:
        SPALLOC_USER: ${{ secrets.SPALLOC_USER }}
        SPALLOC_PASSWORD: ${{ secrets.SPALLOC_PASSWORD }}
      run: | 
        pytest unittests
        pytest spinnman_integration_tests

    - name: Lint with flake8
      if: ${{ matrix.checks == 'full' }}
      run: flake8 spinnman unittests

    - name: Lint with pylint
      if: ${{ matrix.checks == 'full' }}
      uses: ./support/actions/pylint
      with: 
        package: spinnman
        exitcheck: 31 # Action fails on any message
        language: en_GB
        rcfile: global_strict

    - name: Lint with mypy
      if: ${{ matrix.checks == 'full' }}
      run: mypy spinnman

    - name: Run rat copyright enforcement
      if: ${{ matrix.checks == 'validate' }}
      uses: ./support/actions/check-copyrights
      with:
        config_file: rat_asl20.xml

    - name: Build documentation with sphinx
      if: ${{ matrix.checks == 'validate' }}
      uses: ./support/actions/sphinx
      with:
        directory: doc/source

    - name: Validate CITATION.cff
      if: ${{ matrix.checks == 'validate' }}
      uses: dieghernan/cff-validator@main
